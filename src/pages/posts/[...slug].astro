---
import type { IArticlePage, IArticlePageItem } from '@/types/articlepage';
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { loadEnv } from "vite";

export async function getStaticPaths() {
    const options = {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({
        query: `query ArticlePageQuery {
            ArticlePage (
                limit: 40
            )
            {
            __typename
            items {
                _metadata {
                    displayName
                    ... on InstanceMetadata {
                         routeSegment
                    }
                } 
                Title
                PublishDate
                Featured
                Description
                OGImage {
                    base
                    default
                    hierarchical
                }
                ArticleBody {
                    html
                }
            }
            }
        }`,
    }),
    };   

    const { API_ENDPOINT } = loadEnv(process.env.API_ENDPOINT || '', process.cwd(), "");
    const { API_KEY } = loadEnv(process.env.API_KEY || '', process.cwd(), "");
    
    let articles = await (await fetch(`${API_ENDPOINT}?auth=${API_KEY}`, options)).json() as Promise<IArticlePage>;

    return (await articles).data.ArticlePage.items.map((article : IArticlePageItem) => ({
        params: { slug: article._metadata.routeSegment },
        props: { article: article },
    }));
};

const {article} : { article: IArticlePageItem } = Astro.props;
---

<StarlightPage frontmatter={{ title: article.Title , lastUpdated: new Date(article.PublishDate)}}>

        <div set:html={article.ArticleBody.html}></div>

</StarlightPage>